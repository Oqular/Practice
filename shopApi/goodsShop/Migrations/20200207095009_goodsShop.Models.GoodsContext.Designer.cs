// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using goodsShop.Models;

namespace goodsShop.Migrations
{
    [DbContext(typeof(GoodsContext))]
    [Migration("20200207095009_goodsShop.Models.GoodsContext")]
    partial class goodsShopModelsGoodsContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("goodsShop.Models.Goods", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address");

                    b.Property<string>("description");

                    b.Property<string>("phone");

                    b.Property<string>("seller");

                    b.Property<string>("title");

                    b.Property<long>("userId");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("goods");
                });

            modelBuilder.Entity("goodsShop.Models.Goods_Type", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("goodsId");

                    b.Property<long>("typesId");

                    b.HasKey("id");

                    b.HasIndex("goodsId");

                    b.HasIndex("typesId");

                    b.ToTable("Goods_Type");
                });

            modelBuilder.Entity("goodsShop.Models.Image", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("goodsId");

                    b.Property<byte[]>("image");

                    b.HasKey("id");

                    b.HasIndex("goodsId");

                    b.ToTable("image");
                });

            modelBuilder.Entity("goodsShop.Models.Types", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name");

                    b.HasKey("id");

                    b.ToTable("types");
                });

            modelBuilder.Entity("goodsShop.Models.User", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name");

                    b.Property<string>("password");

                    b.Property<double>("rating");

                    b.Property<string>("role");

                    b.Property<string>("surname");

                    b.Property<string>("token");

                    b.Property<string>("username");

                    b.HasKey("id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("goodsShop.Models.Goods", b =>
                {
                    b.HasOne("goodsShop.Models.User")
                        .WithMany("goods")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("goodsShop.Models.Goods_Type", b =>
                {
                    b.HasOne("goodsShop.Models.Goods")
                        .WithMany("type")
                        .HasForeignKey("goodsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("goodsShop.Models.Types")
                        .WithMany("goods")
                        .HasForeignKey("typesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("goodsShop.Models.Image", b =>
                {
                    b.HasOne("goodsShop.Models.Goods")
                        .WithMany("images")
                        .HasForeignKey("goodsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
